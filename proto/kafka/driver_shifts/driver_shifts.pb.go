// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.5
// source: driver_shifts.proto

package driver_shifts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ShiftType indicates the possible driver shift types i.e. scheduled or buffered
type DriverShift_ShiftType int32

const (
	// VEHICLE_STATE_UNSPECIFIED stands for the unspecified shift type
	DriverShift_SHIFT_TYPE_UNSPECIFIED DriverShift_ShiftType = 0
	// SHIFT_TYPE_SCHEDULED stands for the type of a driver shift that is sheduled (normal)
	DriverShift_SHIFT_TYPE_SCHEDULED DriverShift_ShiftType = 1
	// SHIFT_TYPE_BUFFERED stands for the type of a driver shift that is a buffered
	DriverShift_SHIFT_TYPE_BUFFERED DriverShift_ShiftType = 2
)

// Enum value maps for DriverShift_ShiftType.
var (
	DriverShift_ShiftType_name = map[int32]string{
		0: "SHIFT_TYPE_UNSPECIFIED",
		1: "SHIFT_TYPE_SCHEDULED",
		2: "SHIFT_TYPE_BUFFERED",
	}
	DriverShift_ShiftType_value = map[string]int32{
		"SHIFT_TYPE_UNSPECIFIED": 0,
		"SHIFT_TYPE_SCHEDULED":   1,
		"SHIFT_TYPE_BUFFERED":    2,
	}
)

func (x DriverShift_ShiftType) Enum() *DriverShift_ShiftType {
	p := new(DriverShift_ShiftType)
	*p = x
	return p
}

func (x DriverShift_ShiftType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DriverShift_ShiftType) Descriptor() protoreflect.EnumDescriptor {
	return file_driver_shifts_proto_enumTypes[0].Descriptor()
}

func (DriverShift_ShiftType) Type() protoreflect.EnumType {
	return &file_driver_shifts_proto_enumTypes[0]
}

func (x DriverShift_ShiftType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DriverShift_ShiftType.Descriptor instead.
func (DriverShift_ShiftType) EnumDescriptor() ([]byte, []int) {
	return file_driver_shifts_proto_rawDescGZIP(), []int{1, 0}
}

// DriverShifts is an event produced when we have driver shifts that are going to start soon
type DriverShifts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// driver_shifts is an array of DriverShift messages
	DriverShifts []*DriverShift `protobuf:"bytes,1,rep,name=driver_shifts,json=driverShifts,proto3" json:"driver_shifts,omitempty"`
}

func (x *DriverShifts) Reset() {
	*x = DriverShifts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_driver_shifts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverShifts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverShifts) ProtoMessage() {}

func (x *DriverShifts) ProtoReflect() protoreflect.Message {
	mi := &file_driver_shifts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverShifts.ProtoReflect.Descriptor instead.
func (*DriverShifts) Descriptor() ([]byte, []int) {
	return file_driver_shifts_proto_rawDescGZIP(), []int{0}
}

func (x *DriverShifts) GetDriverShifts() []*DriverShift {
	if x != nil {
		return x.DriverShifts
	}
	return nil
}

// DriverShift is an entity that defines the contents of a driver shift
type DriverShift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// city_id is the id of the city
	CityId int32 `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// driver_shift_id is the id of the driver_shift
	DriverShiftId int32 `protobuf:"varint,2,opt,name=driver_shift_id,json=driverShiftId,proto3" json:"driver_shift_id,omitempty"`
	// shift_id is the id of the shift
	ShiftId int32 `protobuf:"varint,3,opt,name=shift_id,json=shiftId,proto3" json:"shift_id,omitempty"`
	// driver_id is the id of the driver
	DriverId int32 `protobuf:"varint,4,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	// vehicle_assigned indicates if there is a vehicle assigned in the driver_shift
	VehicleAssigned bool `protobuf:"varint,5,opt,name=vehicle_assigned,json=vehicleAssigned,proto3" json:"vehicle_assigned,omitempty"`
	// type is a ShiftType enumerator that flags the type of the particulat driver_shift
	Type DriverShift_ShiftType `protobuf:"varint,6,opt,name=type,proto3,enum=driver_shifts.v1.DriverShift_ShiftType" json:"type,omitempty"`
	// shift_start_datetime is the datetime of the start time of the shift
	ShiftStartDatetime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=shift_start_datetime,json=shiftStartDatetime,proto3" json:"shift_start_datetime,omitempty"`
	// shift_end_datetime is the datetime of the end time of the shift
	ShiftEndDatetime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=shift_end_datetime,json=shiftEndDatetime,proto3" json:"shift_end_datetime,omitempty"`
	// driver_first_name is the first name of the driver
	DriverFirstName string `protobuf:"bytes,9,opt,name=driver_first_name,json=driverFirstName,proto3" json:"driver_first_name,omitempty"`
	// driver_last_name is the last name of the driver
	DriverLastName string `protobuf:"bytes,10,opt,name=driver_last_name,json=driverLastName,proto3" json:"driver_last_name,omitempty"`
}

func (x *DriverShift) Reset() {
	*x = DriverShift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_driver_shifts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverShift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverShift) ProtoMessage() {}

func (x *DriverShift) ProtoReflect() protoreflect.Message {
	mi := &file_driver_shifts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverShift.ProtoReflect.Descriptor instead.
func (*DriverShift) Descriptor() ([]byte, []int) {
	return file_driver_shifts_proto_rawDescGZIP(), []int{1}
}

func (x *DriverShift) GetCityId() int32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *DriverShift) GetDriverShiftId() int32 {
	if x != nil {
		return x.DriverShiftId
	}
	return 0
}

func (x *DriverShift) GetShiftId() int32 {
	if x != nil {
		return x.ShiftId
	}
	return 0
}

func (x *DriverShift) GetDriverId() int32 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *DriverShift) GetVehicleAssigned() bool {
	if x != nil {
		return x.VehicleAssigned
	}
	return false
}

func (x *DriverShift) GetType() DriverShift_ShiftType {
	if x != nil {
		return x.Type
	}
	return DriverShift_SHIFT_TYPE_UNSPECIFIED
}

func (x *DriverShift) GetShiftStartDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.ShiftStartDatetime
	}
	return nil
}

func (x *DriverShift) GetShiftEndDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.ShiftEndDatetime
	}
	return nil
}

func (x *DriverShift) GetDriverFirstName() string {
	if x != nil {
		return x.DriverFirstName
	}
	return ""
}

func (x *DriverShift) GetDriverLastName() string {
	if x != nil {
		return x.DriverLastName
	}
	return ""
}

var File_driver_shifts_proto protoreflect.FileDescriptor

var file_driver_shifts_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0c, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x0c,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x22, 0xb8, 0x04, 0x0a,
	0x0b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x53, 0x68,
	0x69, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a,
	0x14, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x73, 0x68, 0x69, 0x66, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x10, 0x73, 0x68, 0x69, 0x66, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x09, 0x53,
	0x68, 0x69, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x48, 0x49, 0x46,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x48, 0x49, 0x46, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x48, 0x49, 0x46, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x55, 0x46,
	0x46, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x42, 0x80, 0x01, 0x0a, 0x2d, 0x63, 0x6f, 0x6d, 0x2e,
	0x74, 0x61, 0x78, 0x69, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x73, 0x5f, 0x76, 0x31, 0x5f, 0x31, 0x50, 0x01, 0x5a, 0x1b, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0xca, 0x02, 0x2f, 0x74, 0x61, 0x78, 0x69, 0x62,
	0x65, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x73, 0x5c, 0x76, 0x31, 0x5f, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_driver_shifts_proto_rawDescOnce sync.Once
	file_driver_shifts_proto_rawDescData = file_driver_shifts_proto_rawDesc
)

func file_driver_shifts_proto_rawDescGZIP() []byte {
	file_driver_shifts_proto_rawDescOnce.Do(func() {
		file_driver_shifts_proto_rawDescData = protoimpl.X.CompressGZIP(file_driver_shifts_proto_rawDescData)
	})
	return file_driver_shifts_proto_rawDescData
}

var file_driver_shifts_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_driver_shifts_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_driver_shifts_proto_goTypes = []interface{}{
	(DriverShift_ShiftType)(0),    // 0: driver_shifts.v1.DriverShift.ShiftType
	(*DriverShifts)(nil),          // 1: driver_shifts.v1.DriverShifts
	(*DriverShift)(nil),           // 2: driver_shifts.v1.DriverShift
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_driver_shifts_proto_depIdxs = []int32{
	2, // 0: driver_shifts.v1.DriverShifts.driver_shifts:type_name -> driver_shifts.v1.DriverShift
	0, // 1: driver_shifts.v1.DriverShift.type:type_name -> driver_shifts.v1.DriverShift.ShiftType
	3, // 2: driver_shifts.v1.DriverShift.shift_start_datetime:type_name -> google.protobuf.Timestamp
	3, // 3: driver_shifts.v1.DriverShift.shift_end_datetime:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_driver_shifts_proto_init() }
func file_driver_shifts_proto_init() {
	if File_driver_shifts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_driver_shifts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverShifts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_driver_shifts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverShift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_driver_shifts_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_driver_shifts_proto_goTypes,
		DependencyIndexes: file_driver_shifts_proto_depIdxs,
		EnumInfos:         file_driver_shifts_proto_enumTypes,
		MessageInfos:      file_driver_shifts_proto_msgTypes,
	}.Build()
	File_driver_shifts_proto = out.File
	file_driver_shifts_proto_rawDesc = nil
	file_driver_shifts_proto_goTypes = nil
	file_driver_shifts_proto_depIdxs = nil
}
